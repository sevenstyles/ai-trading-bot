//@version=6
indicator("Fair Value Gap", "FVG", overlay=true, max_boxes_count=500)

// Input parameters
extendBoxes = input.int(50, "Extend Boxes (Bars)", minval=1, maxval=500)
bullishColor = input.color(color.new(color.green, 70), "Bullish FVG Color")
bearishColor = input.color(color.new(color.red, 70), "Bearish FVG Color")
invalidColor = input.color(color.new(color.gray, 70), "Invalid FVG Color")
minGapSize = input.float(0.1, "Minimum Gap Size %", minval=0.01, step=0.01) / 100

// Arrays to store FVG boxes and their price levels
var box[] bullishFVGs = array.new_box()
var box[] bearishFVGs = array.new_box()
var float[] bullishLevels = array.new_float()
var float[] bearishLevels = array.new_float()

// Function to clean up old boxes and levels
cleanupArrays() =>
    while array.size(bullishFVGs) > 0 and box.get_left(array.get(bullishFVGs, 0)) < bar_index - 500
        array.shift(bullishFVGs)
        array.shift(bullishLevels)
    while array.size(bearishFVGs) > 0 and box.get_left(array.get(bearishFVGs, 0)) < bar_index - 500
        array.shift(bearishFVGs)
        array.shift(bearishLevels)

// Clean up old boxes
cleanupArrays()

// Detect Bullish FVG (gap up)
if low > high[2] and math.abs(low - high[2]) > close * minGapSize
    // Create new box
    box newBox = box.new(left=bar_index - 2, top=low, right=bar_index + extendBoxes, bottom=high[2], bgcolor=bullishColor, border_color=na)
    array.push(bullishFVGs, newBox)
    array.push(bullishLevels, high[2])  // Store the bottom level

// Detect Bearish FVG (gap down)
if high < low[2] and math.abs(low[2] - high) > close * minGapSize
    // Create new box
    box newBox = box.new(left=bar_index - 2, top=high, right=bar_index + extendBoxes, bottom=low[2], bgcolor=bearishColor, border_color=na)
    array.push(bearishFVGs, newBox)
    array.push(bearishLevels, low[2])  // Store the top level

// Check for invalidation of bullish FVGs
if array.size(bullishFVGs) > 0
    for i = 0 to array.size(bullishFVGs) - 1
        box currentBox = array.get(bullishFVGs, i)
        float level = array.get(bullishLevels, i)
        if low < level  // Price moved below the FVG
            box.set_bgcolor(currentBox, invalidColor)

// Check for invalidation of bearish FVGs
if array.size(bearishFVGs) > 0
    for i = 0 to array.size(bearishFVGs) - 1
        box currentBox = array.get(bearishFVGs, i)
        float level = array.get(bearishLevels, i)
        if high > level  // Price moved above the FVG
            box.set_bgcolor(currentBox, invalidColor)

// Extend active boxes
if array.size(bullishFVGs) > 0
    for i = 0 to array.size(bullishFVGs) - 1
        box currentBox = array.get(bullishFVGs, i)
        box.set_right(currentBox, bar_index + extendBoxes)

if array.size(bearishFVGs) > 0
    for i = 0 to array.size(bearishFVGs) - 1
        box currentBox = array.get(bearishFVGs, i)
        box.set_right(currentBox, bar_index + extendBoxes) 