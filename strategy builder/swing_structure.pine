//@version=6
indicator("Swing Structure", overlay=true, max_labels_count=500, max_lines_count=500)

// Constants
var BULLISH = 1
var BEARISH = -1

// Input parameters
lookbackLeft = input(50, "Lookback Left (Major Swings)")
lookbackRight = input(50, "Lookback Right (Major Swings)")
minorLookbackLeft = input(10, "Lookback Left (Minor Swings)")
minorLookbackRight = input(10, "Lookback Right (Minor Swings)")
labelOffset = input.float(2.0, "Text Offset", minval=0.1)
swingThreshold = input.float(0.5, "Swing Threshold %", minval=0.1, step=0.1) / 100
textSize = input.string("Small", "Text Size", options=["Tiny", "Small", "Normal", "Large"])

// Convert text size input to label size
textSizeValue = switch
    textSize == "Tiny"   => size.tiny
    textSize == "Small"  => size.small
    textSize == "Normal" => size.normal
    => size.large

// Variables to store previous swing levels and market structure
var float prevSwingHigh = na
var float prevSwingLow = na
var float lastSwingHigh = na
var float lastSwingLow = na
var bool inDowntrend = false
var bool inUptrend = false
var int lastSwingHighBar = na
var int lastSwingLowBar = na
var int trendBias = 0

// Arrays to store all our visual elements
var array<line> bosLines = array.new<line>()
var array<label> swingLabels = array.new<label>()

// Function to detect swing high/low using pivot points with threshold
float threshold = close * swingThreshold

// Major swing points
swingHigh = ta.pivothigh(high, lookbackLeft, lookbackRight)
swingLow = ta.pivotlow(low, lookbackLeft, lookbackRight)

// Minor swing points
minorSwingHigh = ta.pivothigh(high, minorLookbackLeft, minorLookbackRight)
minorSwingLow = ta.pivotlow(low, minorLookbackLeft, minorLookbackRight)

// Only consider swing points that exceed the threshold
validSwingHigh = not na(swingHigh) and (na(lastSwingHigh) or math.abs(swingHigh - lastSwingHigh) > threshold)
validSwingLow = not na(swingLow) and (na(lastSwingLow) or math.abs(swingLow - lastSwingLow) > threshold)

validMinorSwingHigh = not na(minorSwingHigh) and (na(lastSwingHigh) or math.abs(minorSwingHigh - lastSwingHigh) > threshold * 0.5)
validMinorSwingLow = not na(minorSwingLow) and (na(lastSwingLow) or math.abs(minorSwingLow - lastSwingLow) > threshold * 0.5)

// Update swing points and plot text
if validSwingHigh
    float swingHighPrice = swingHigh
    lastSwingHigh := swingHighPrice
    
    if not na(prevSwingHigh)
        if swingHighPrice > prevSwingHigh
            label.new(bar_index[lookbackRight], swingHighPrice + (labelOffset * syminfo.mintick), text="HH", xloc=xloc.bar_index, yloc=yloc.price, color=na, textcolor=color.green, style=label.style_label_down, size=textSizeValue)
            if inDowntrend
                label.new(bar_index[lookbackRight], swingHighPrice + (3 * labelOffset * syminfo.mintick), text="BOS", xloc=xloc.bar_index, yloc=yloc.price, color=na, textcolor=color.purple, style=label.style_label_down, size=textSizeValue)
                line.new(bar_index[lookbackRight], swingHighPrice, lastSwingHighBar, prevSwingHigh, color=color.yellow, width=2)
                inDowntrend := false
                inUptrend := true
                trendBias := BULLISH
        else
            label.new(bar_index[lookbackRight], swingHighPrice + (labelOffset * syminfo.mintick), text="LH", xloc=xloc.bar_index, yloc=yloc.price, color=na, textcolor=color.red, style=label.style_label_down, size=textSizeValue)
            if not inDowntrend
                inDowntrend := true
                inUptrend := false
                trendBias := BEARISH
    prevSwingHigh := swingHighPrice
    lastSwingHighBar := bar_index[lookbackRight]

if validSwingLow
    float swingLowPrice = swingLow
    lastSwingLow := swingLowPrice
    
    if not na(prevSwingLow)
        if swingLowPrice < prevSwingLow
            label.new(bar_index[lookbackRight], swingLowPrice - (labelOffset * syminfo.mintick), text="LL", xloc=xloc.bar_index, yloc=yloc.price, color=na, textcolor=color.red, style=label.style_label_up, size=textSizeValue)
            if inUptrend
                label.new(bar_index[lookbackRight], swingLowPrice - (3 * labelOffset * syminfo.mintick), text="BOS", xloc=xloc.bar_index, yloc=yloc.price, color=na, textcolor=color.purple, style=label.style_label_up, size=textSizeValue)
                line.new(bar_index[lookbackRight], swingLowPrice, lastSwingLowBar, prevSwingLow, color=color.yellow, width=2)
                inUptrend := false
                inDowntrend := true
                trendBias := BEARISH
        else
            label.new(bar_index[lookbackRight], swingLowPrice - (labelOffset * syminfo.mintick), text="HL", xloc=xloc.bar_index, yloc=yloc.price, color=na, textcolor=color.green, style=label.style_label_up, size=textSizeValue)
            if not inUptrend
                inUptrend := true
                inDowntrend := false
                trendBias := BULLISH
    prevSwingLow := swingLowPrice
    lastSwingLowBar := bar_index[lookbackRight]

// Plot minor swing points
if validMinorSwingHigh
    float minorHighPrice = minorSwingHigh
    label.new(bar_index[minorLookbackRight], minorHighPrice + (labelOffset * syminfo.mintick), text="h", xloc=xloc.bar_index, yloc=yloc.price, color=na, textcolor=color.new(color.gray, 40), style=label.style_label_down, size=size.tiny)

if validMinorSwingLow
    float minorLowPrice = minorSwingLow
    label.new(bar_index[minorLookbackRight], minorLowPrice - (labelOffset * syminfo.mintick), text="l", xloc=xloc.bar_index, yloc=yloc.price, color=na, textcolor=color.new(color.gray, 40), style=label.style_label_up, size=size.tiny) 