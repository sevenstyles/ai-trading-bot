//@version=6
indicator("Swing Structure", overlay=true, max_labels_count=500, max_lines_count=500)

// Input parameters
lookbackLeft = input(5, "Lookback Left")
lookbackRight = input(5, "Lookback Right")
labelOffset = input.float(2.0, "Text Offset", minval=0.1)
textSize = input.string("Small", "Text Size", options=["Tiny", "Small", "Normal", "Large"])

// Convert text size input to label size
textSizeValue = switch
    textSize == "Tiny"   => size.tiny
    textSize == "Small"  => size.small
    textSize == "Normal" => size.normal
    => size.large

// Function to detect swing high - checking if current bar's high is highest in the lookback period
float swingHighPrice = high[lookbackRight]
swingHigh = high[lookbackRight] > high[lookbackRight + 1] and 
           high[lookbackRight] > high[lookbackRight - 1] and 
           high[lookbackRight] >= ta.highest(high[lookbackRight + 1], lookbackLeft + lookbackRight - 1)

// Function to detect swing low - checking if current bar's low is lowest in the lookback period
float swingLowPrice = low[lookbackRight]
swingLow = low[lookbackRight] < low[lookbackRight + 1] and 
           low[lookbackRight] < low[lookbackRight - 1] and 
           low[lookbackRight] <= ta.lowest(low[lookbackRight + 1], lookbackLeft + lookbackRight - 1)

// Variables to store previous swing levels and market structure
var float prevSwingHigh = na
var float prevSwingLow = na
var float lastSwingHigh = na
var float lastSwingLow = na
var bool inDowntrend = false
var bool inUptrend = false
var int consecutiveLowerLows = 0
var int consecutiveHigherHighs = 0
var array<line> bosLines = array.new<line>()

// Update swing points and plot text
if swingHigh
    lastSwingHigh := swingHighPrice
    if not na(prevSwingHigh)
        if swingHighPrice > prevSwingHigh
            label.new(time[lookbackRight], swingHighPrice + (labelOffset * syminfo.mintick), text="HH", xloc=xloc.bar_time, yloc=yloc.price, color=na, textcolor=color.green, style=label.style_label_down, size=textSizeValue)
            consecutiveHigherHighs := consecutiveHigherHighs + 1
            if inDowntrend and consecutiveHigherHighs >= 1
                label.new(time[lookbackRight], swingHighPrice + (3 * labelOffset * syminfo.mintick), text="BOS", xloc=xloc.bar_time, yloc=yloc.price, color=na, textcolor=color.green, style=label.style_label_down, size=textSizeValue)
                line newBosLine = line.new(time[lookbackRight], swingHighPrice, time, swingHighPrice, color=color.yellow, width=2, xloc=xloc.bar_time)
                bosLines.push(newBosLine)
                inDowntrend := false
                inUptrend := true
                consecutiveLowerLows := 0
        else
            label.new(time[lookbackRight], swingHighPrice + (labelOffset * syminfo.mintick), text="LH", xloc=xloc.bar_time, yloc=yloc.price, color=na, textcolor=color.red, style=label.style_label_down, size=textSizeValue)
            consecutiveHigherHighs := 0
            if not inDowntrend
                inDowntrend := true
                inUptrend := false
    prevSwingHigh := swingHighPrice

if swingLow
    lastSwingLow := swingLowPrice
    if not na(prevSwingLow)
        if swingLowPrice < prevSwingLow
            label.new(time[lookbackRight], swingLowPrice - (labelOffset * syminfo.mintick), text="LL", xloc=xloc.bar_time, yloc=yloc.price, color=na, textcolor=color.red, style=label.style_label_up, size=textSizeValue)
            consecutiveLowerLows := consecutiveLowerLows + 1
            if inUptrend and consecutiveLowerLows >= 1
                label.new(time[lookbackRight], swingLowPrice - (3 * labelOffset * syminfo.mintick), text="BOS", xloc=xloc.bar_time, yloc=yloc.price, color=na, textcolor=color.red, style=label.style_label_up, size=textSizeValue)
                line newBosLine = line.new(time[lookbackRight], swingLowPrice, time, swingLowPrice, color=color.yellow, width=2, xloc=xloc.bar_time)
                bosLines.push(newBosLine)
                inUptrend := false
                inDowntrend := true
                consecutiveHigherHighs := 0
        else
            label.new(time[lookbackRight], swingLowPrice - (labelOffset * syminfo.mintick), text="HL", xloc=xloc.bar_time, yloc=yloc.price, color=na, textcolor=color.green, style=label.style_label_up, size=textSizeValue)
            consecutiveLowerLows := 0
            if not inUptrend
                inUptrend := true
                inDowntrend := false
    prevSwingLow := swingLowPrice

// Update BOS lines
if array.size(bosLines) > 0
    for i = 0 to array.size(bosLines) - 1
        line.set_x2(array.get(bosLines, i), time) 